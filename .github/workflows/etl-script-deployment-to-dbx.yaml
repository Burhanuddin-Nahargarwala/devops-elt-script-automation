name: CI/CD Pipeline for Databricks ETL (Deploy Only)

on:
  push:
    branches:
      - main

jobs:
  test-and-deploy:
    name: Test and Deploy ETL Script
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up a Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install all the necessary Python packages
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Step 4: Run Unit Tests (Quality Gate)
      - name: Run Unit Tests with Pytest
        run: pytest tests/

            # Step 5: Deploy Code to Databricks Repo
      - name: Deploy Code to Databricks Repo
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          echo "Installing Databricks CLI..."
          pip install databricks-cli

          echo "Explicitly configuring Databricks CLI..."
          # Create the configuration directory if it doesn't exist
          mkdir -p ~/.databrickscfg/
          
          # Manually write the configuration to the 'config' FILE inside the DIRECTORY
          # The change is adding '/config' to the end of the path.
          echo "[default]
          host = ${{ secrets.DATABRICKS_HOST }}
          token = ${{ secrets.DATABRICKS_TOKEN }}" > ~/.databrickscfg/config
          
          echo "Configuration complete. Syncing GitHub repo to Databricks Repos..."
          
          # Define Repo path and Git URL
          REPO_PATH="/Repos/Production/databricks-etl-pipeline"
          GIT_URL="https://github.com/${{ github.repository }}"

          # Check if the repo already exists in Databricks
          if databricks repos get --path $REPO_PATH; then
            echo "Repo exists. Updating to latest commit..."
            databricks repos update --path $REPO_PATH --branch main
          else
            echo "Repo does not exist. Cloning it..."
            databricks repos create --path $REPO_PATH --url $GIT_URL --provider gitHub
          fi
          
          echo "Deployment to Databricks Repos successful!"